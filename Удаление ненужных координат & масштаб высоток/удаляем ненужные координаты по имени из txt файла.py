'''Удаляем ненужные координаты по имени,
корректируем высотку согласно масштабного коэффициента,
смотрим во сколько раз увеличено в чертеже.
Коээффициент k вводим вручную ниже.
Использовался для пострения поверхности Борозднино,
применялся масш. коэфф=5 для высоток, чтобы визуально
лучше видеть препад высот в чертеже'''

k = 5 # во сколько раз уменьшаем высотку
print('Коэффициент уменьшения высотки = {}\n\
Если нужен другой - исправить в скрипте.\n'.format(k))

with open ('coords_from_dxf.txt', 'r') as f :
    fe = f.readlines()

print('Длина начального файла = ', len(fe))

d={}

for _ in fe:
    n,x,y,h0 = _.split(',')
    h1=round(float(h0)/k, 2)
    h = '{:.2f}'.format(h1)          # округляем строковое до 2х знаков после запятой
    d[n] = (x,y,h)

print('Длина созданной базы = ', len(d))

ans = ''
while ans == '' :
    s = input('\nВводим имя удаляемой точки   >>> ')
    try:
        print( 'Удаляем точку {}'.format(s), d[s] )
        del d[s]
        print('Оставшееся количество точек в базе = {}'.format(len(d)))
    except KeyError :
        print('-'*30+' Такой точки нет ! '+ '-'*30)
    ans = input('Продолжить - Enter >>> ')

name_outer_file = 'coords_mod_from_surface.txt'       # имя почищенной базы

ready = open(name_outer_file, 'w')
for _ in d.items():
    ready.write(_[0] + ',' + _[1][0] + ',' + _[1][1] + ',' +  _[1][2] + '\n')
    print(_[0], _[1][0], _[1][1], _[1][2])
ready.close()

print('Новый файл {} записан.\nРазмер измененной базы  = {}'\
      .format(name_outer_file, len(d)))
